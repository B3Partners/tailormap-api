<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2021 B3Partners B.V.

SPDX-License-Identifier: MIT
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.6.2</version>
  </parent>
  <groupId>nl.b3p.tailormap</groupId>
  <artifactId>tailormap-api</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>Tailormap API</name>
  <description>Tailormap API provides the OpenAPI for Tailormap</description>
  <url>https://github.com/B3Partners/tailormap-api/</url>
  <inceptionYear>2021</inceptionYear>
  <organization>
    <name>B3Partners B.V.</name>
    <url>https://www.b3partners.nl/</url>
  </organization>
  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://raw.githubusercontent.com/B3Partners/tailormap-api/main/LICENSES/MIT.txt</url>
      <distribution>repo</distribution>
      <comments>For the tailormap-api code.</comments>
    </license>
    <license>
      <name>CC0-1.0</name>
      <url>https://raw.githubusercontent.com/B3Partners/tailormap-api/main/LICENSES/CC0-1.0.txt</url>
      <distribution>repo</distribution>
      <comments>For the tailormap-api documentation.</comments>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>matthijsln</id>
      <name>Matthijs Laan</name>
      <email>matthijslaan@b3partners.nl</email>
      <organization>B3Partners B.V.</organization>
      <organizationUrl>https://www.b3partners.nl</organizationUrl>
    </developer>
    <developer>
      <id>mprins</id>
      <name>Mark Prins</name>
      <email>mark@b3partners.nl</email>
      <organization>B3Partners B.V.</organization>
      <organizationUrl>https://www.b3partners.nl</organizationUrl>
    </developer>
    <developer>
      <id>mvdstruijk</id>
      <name>Martijn van de Struijk</name>
      <email>martijn@b3partners.nl</email>
      <organization>B3Partners B.V.</organization>
      <organizationUrl>https://www.b3partners.nl</organizationUrl>
    </developer>
    <developer>
      <id>geertplaisier</id>
      <name>Geert Plaisier</name>
      <email>geert@b3partners.nl</email>
      <organization>Gnamic</organization>
      <organizationUrl>https://www.gnamic.nl/</organizationUrl>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:git@github.com:B3Partners/tailormap-api.git</connection>
    <developerConnection>scm:git:git@github.com:B3Partners/tailormap-api.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/B3Partners/tailormap-api/</url>
  </scm>
  <issueManagement>
    <system>Jira</system>
    <url>https://b3partners.atlassian.net/browse/HTM</url>
  </issueManagement>
  <ciManagement>
    <system>Github Actions</system>
    <url>https://github.com/B3Partners/tailormap-api/actions</url>
  </ciManagement>
  <distributionManagement>
    <repository>
      <id>repo.b3p.nl</id>
      <name>B3Partners releases repository</name>
      <url>https://repo.b3p.nl/nexus/repository/releases/</url>
    </repository>
    <snapshotRepository>
      <id>repo.b3p.nl</id>
      <name>B3Partners snapshots repository</name>
      <url>https://repo.b3p.nl/nexus/repository/snapshots/</url>
    </snapshotRepository>
    <site>
      <id>gh-pages</id>
      <name>github pages site</name>
      <url>scm:git:ssh://git@github.com/b3partners/tailormap-api.git</url>
    </site>
  </distributionManagement>
  <properties>
    <java.version>11</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.build.sourceVersion>${java.version}</project.build.sourceVersion>
    <project.build.targetVersion>${java.version}</project.build.targetVersion>
    <!--    <project.build.outputTimestamp>2021-11-11T16:01:17Z</project.build.outputTimestamp>-->
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <spring.boot.version>${project.parent.version}</spring.boot.version>
    <!-- version overrides. see org.springframework.boot:spring-boot-dependencies -->
    <hsqldb.version>2.6.1</hsqldb.version>
    <postgresql.version>42.3.1</postgresql.version>
    <junit-jupiter.version>5.8.2</junit-jupiter.version>
    <logback.version>1.2.10</logback.version>
    <org.tailormap.version>5.9.12</org.tailormap.version>
    <maven.surefire.version>3.0.0-M5</maven.surefire.version>
    <maven-surefire-plugin.version>${maven.surefire.version}</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>${maven.surefire.version}</maven-failsafe-plugin.version>
    <maven-javadoc-plugin.version>3.3.1</maven-javadoc-plugin.version>
    <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
    <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
    <maven-deploy-plugin.version>3.0.0-M2</maven-deploy-plugin.version>
    <maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>

    <maven-pmd-plugin.version>3.15.0</maven-pmd-plugin.version>
    <versions-maven-plugin.version>2.8.1</versions-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
    <dependency-check-maven.version>6.5.2</dependency-check-maven.version>
    <modernizer-maven-plugin.version>2.3.0</modernizer-maven-plugin.version>
    <!-- docker.b3p.nl or alternatively ghcr.io  -->
    <docker.deploy.repo>ghcr.io</docker.deploy.repo>
    <!-- skip QA checks -->
    <skipQA>false</skipQA>
    <pmd.version>6.41.0</pmd.version>
    <errorProne.version>2.10.0</errorProne.version>
    <errorProneFlags>-XepDisableWarningsInGeneratedCode</errorProneFlags>
    <compiler.lint>deprecation,unchecked</compiler.lint>
    <failOnValidation>true</failOnValidation>
    <fmt.action>format</fmt.action>
    <pom.fmt.action>sort</pom.fmt.action>
    <docker.skip>false</docker.skip>
    <maven-fluido-skin.version>1.10.0</maven-fluido-skin.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit-jupiter.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.gaul</groupId>
        <artifactId>modernizer-maven-annotations</artifactId>
        <version>${modernizer-maven-plugin.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <!--
          this (broken!) transitive dependency from org.skyscreamer:jsonassert:jar:1.5.0:test conflicts
          with org.json.json from org.tailormap:viewer-config-persistence
          -->
          <groupId>com.vaadin.external.google</groupId>
          <artifactId>android-json</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!-- provides @SuppressModernizer that can be used on method to suppress the Modernizer plugin -->
      <groupId>org.gaul</groupId>
      <artifactId>modernizer-maven-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.checkerframework</groupId>
          <artifactId>checker-qual</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.tailormap</groupId>
      <artifactId>viewer-config-persistence</artifactId>
      <version>${org.tailormap.version}</version>
      <exclusions>
        <exclusion>
          <!-- SLF4J is provided by SpringBoot through logback -->
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.12.0</version>
    </dependency>
    <dependency>
      <!-- this has "testdata.sql" that can be use to setup a HSQLDB test database -->
      <groupId>org.tailormap</groupId>
      <artifactId>viewer-config-persistence</artifactId>
      <version>${org.tailormap.version}</version>
      <classifier>tests</classifier>
      <type>test-jar</type>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <!-- SLF4J is provided by SpringBoot through logback -->
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>2.1.12</version>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <id>B3Partners</id>
      <name>Releases hosted by B3Partners</name>
      <url>https://repo.b3p.nl/nexus/repository/public/</url>
    </repository>
  </repositories>
  <build>
    <defaultGoal>install</defaultGoal>
    <!-- no version number on jar makes building docker image easier -->
    <finalName>${project.artifactId}</finalName>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>${basedir}/src/main/resources</directory>
        <includes>
          <include>**/index.html</include>
          <include>**/application*.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <excludes>
          <exclude>**/application*.properties</exclude>
          <exclude>**/index.html</exclude>
        </excludes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <filtering>true</filtering>
        <directory>${basedir}/src/test/resources</directory>
        <includes>
          <include>**/application*.properties</include>
        </includes>
      </testResource>
      <testResource>
        <directory>${basedir}/src/test/resources</directory>
        <excludes>
          <exclude>**/application*.properties</exclude>
        </excludes>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.openapitools</groupId>
          <artifactId>openapi-generator-maven-plugin</artifactId>
          <version>5.3.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${maven-pmd-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>${dependency-check-maven.version}</version>
        </plugin>
        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <groupId>com.coveo</groupId>
          <artifactId>fmt-maven-plugin</artifactId>
          <version>2.13</version>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.38.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-scm-publish-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.10.0</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>3.0.0-M4</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>it.ozimov</groupId>
        <artifactId>yaml-properties-maven-plugin</artifactId>
        <version>1.1.3</version>
        <executions>
          <execution>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <files>
                <file>${project.basedir}/src/main/resources/tailormap-api.yaml</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <delimiters>
            <delimiter>@</delimiter>
          </delimiters>
          <useDefaultDelimiters>false</useDefaultDelimiters>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <fork>true</fork>
          <compilerArgs combine.children="append">
            <arg>-XDcompilePolicy=simple</arg>
            <arg>-Xplugin:ErrorProne -XepExcludedPaths:${project.build.directory}/generated-sources/.* ${errorProneFlags}</arg>
            <arg>-Xlint:${compiler.lint}</arg>
            <arg>-Werror</arg>
            <arg>-Xmaxwarns</arg>
            <arg>1000</arg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>com.google.errorprone</groupId>
              <artifactId>error_prone_core</artifactId>
              <version>${errorProne.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <project.version>${project.version}</project.version>
          </systemPropertyVariables>
          <environmentVariables>
            <!--suppress UnresolvedMavenProperty -->
            <API_VERSION>${info.version}</API_VERSION>
            <!-- TODO read this from persistence -->
            <DATABASE_VERSION>46</DATABASE_VERSION>
          </environmentVariables>
          <cleanCache>true</cleanCache>
          <!--suppress UnresolvedMavenProperty -->
          <jvmArguments>${surefireArgLine}</jvmArguments>
        </configuration>
        <executions>
          <execution>
            <id>start-spring-boot</id>
            <goals>
              <goal>start</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <!-- <skip>${skipQA}</skip> -->
              <profiles>test</profiles>
              <!--suppress UnresolvedMavenProperty -->
              <jvmArguments>${failsafeArgLine}</jvmArguments>
              <environmentVariables>
                <!--suppress UnresolvedMavenProperty -->
                <API_VERSION>${info.version}</API_VERSION>
                <!-- TODO read this from persistence -->
                <DATABASE_VERSION>46</DATABASE_VERSION>
              </environmentVariables>
              <systemPropertyVariables>
                <project.version>${project.version}</project.version>
              </systemPropertyVariables>
            </configuration>
          </execution>
          <execution>
            <id>stop-spring-boot</id>
            <goals>
              <goal>stop</goal>
            </goals>
            <phase>post-integration-test</phase>
            <configuration>
              <!-- <skip>${skipQA}</skip> -->
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!--suppress UnresolvedMavenProperty -->
          <argLine>${surefireArgLine}</argLine>
          <systemPropertyVariables>
            <project.version>${project.version}</project.version>
          </systemPropertyVariables>
          <environmentVariables>
            <!--suppress UnresolvedMavenProperty -->
            <API_VERSION>${info.version}</API_VERSION>
            <!-- TODO read this from persistence -->
            <DATABASE_VERSION>46</DATABASE_VERSION>
          </environmentVariables>
          <excludes>
            <exclude>**/*IntegrationTest.java</exclude>
          </excludes>
          <trimStackTrace>false</trimStackTrace>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <includes>
            <include>**/*IntegrationTest.java</include>
          </includes>
          <!--suppress UnresolvedMavenProperty -->
          <argLine>${failsafeArgLine}</argLine>
          <trimStackTrace>false</trimStackTrace>
          <systemPropertyVariables>
            <project.version>${project.version}</project.version>
          </systemPropertyVariables>
          <environmentVariables>
            <!--suppress UnresolvedMavenProperty -->
            <API_VERSION>${info.version}</API_VERSION>
            <!-- TODO read this from persistence -->
            <DATABASE_VERSION>46</DATABASE_VERSION>
          </environmentVariables>
          <useFile>false</useFile>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/resources/tailormap-api.yaml</inputSpec>
              <!-- <generatorName>java</generatorName>-->
              <!-- <library>native</library>-->
              <generatorName>spring</generatorName>
              <library>spring-boot</library>
              <generateModels>true</generateModels>
              <generateModelTests>true</generateModelTests>
              <modelPackage>nl.b3p.tailormap.api.model</modelPackage>
              <generateApis>false</generateApis>
              <invokerPackage>nl.b3p.tailormap.api.invoker</invokerPackage>
              <generateSupportingFiles>false</generateSupportingFiles>
              <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
              <configOptions>
                <dateLibrary>java8</dateLibrary>
                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                <openApiNullable>false</openApiNullable>
                <oas3>true</oas3>
                <serializableModel>true</serializableModel>
                <useOptional>true</useOptional>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>fix-generated-sources</id>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>process-sources</phase>
            <configuration>
              <target name="fix-generated-sources">
                <!-- work around a stupid bug in the openapi generator plugin that can't do this right -->
                <replace file="target/generated-sources/openapi/src/main/java/nl/b3p/tailormap/api/model/Component.java" summary="true">
                  <replacetoken><![CDATA[private Map<String, String> config = ;]]></replacetoken>
                  <replacevalue><![CDATA[private Map<String, String> config = new HashMap<>();]]></replacevalue>
                </replace>
                <!-- remove unused imports -->
                <replace dir="target/generated-sources/openapi/src/main/java/nl/b3p/tailormap/api/model/" summary="true">
                  <replacetoken><![CDATA[import io.swagger.annotations.ApiModel;]]></replacetoken>
                  <replacevalue></replacevalue>
                </replace>
                <replace dir="target/generated-sources/openapi/src/main/java/nl/b3p/tailormap/api/model/" summary="true">
                  <replacetoken><![CDATA[import io.swagger.annotations.ApiModelProperty;]]></replacetoken>
                  <replacevalue></replacevalue>
                </replace>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-javadoc</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <notimestamp>true</notimestamp>
              <failOnWarnings>${failOnValidation}</failOnWarnings>
              <failOnError>${failOnValidation}</failOnError>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-test-resources</id>
            <!-- extract testdata.sql from viewer-config-persistence:tests to import.sql -->
            <goals>
              <goal>unpack</goal>
            </goals>
            <phase>process-test-classes</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.tailormap</groupId>
                  <artifactId>viewer-config-persistence</artifactId>
                  <type>test-jar</type>
                  <classifier>tests</classifier>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
                  <includes>**/testdata.sql</includes>
                  <fileMappers>
                    <org.codehaus.plexus.components.io.filemappers.FlattenFileMapper></org.codehaus.plexus.components.io.filemappers.FlattenFileMapper>
                    <org.codehaus.plexus.components.io.filemappers.RegExpFileMapper>
                      <pattern>testdata.sql</pattern>
                      <replacement>import.sql</replacement>
                    </org.codehaus.plexus.components.io.filemappers.RegExpFileMapper>
                  </fileMappers>
                </artifactItem>
              </artifactItems>
              <includes>**/*.java</includes>
              <excludes>**/*.properties</excludes>
              <outputDirectory>${project.build.directory}/wars</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>pre-integration-test</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <propertyName>failsafeArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>test</phase>
          </execution>
          <execution>
            <id>post-integration-test</id>
            <goals>
              <goal>merge</goal>
              <goal>report-integration</goal>
              <goal>report</goal>
            </goals>
            <phase>post-integration-test</phase>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- not bound to any lifecycle, but can be run from commandline using:
        mvn -U install -DskipTests -DskipITs -Ddocker.skip=true org.owasp:dependency-check-maven:check -->
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <configuration>
          <skip>${skipQA}</skip>
          <suppressionFile>${project.basedir}/build/qa/owasp-suppression.xml</suppressionFile>
          <hintsFile>${project.basedir}/build/qa/owasp-hints.xml</hintsFile>
          <format>ALL</format>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <skip>${skipQA}</skip>
          <rulesets>
            <ruleset>${project.basedir}/build/qa/pmd-ruleset.xml</ruleset>
            <ruleset>${project.basedir}/build/qa/pmd-junit-ruleset.xml</ruleset>
          </rulesets>
          <failurePriority>3</failurePriority>
          <minimumPriority>3</minimumPriority>
          <verbose>true</verbose>
          <printFailingErrors>true</printFailingErrors>
          <includeTests>true</includeTests>
          <excludeRoots>
            <excludeRoot>target/generated-sources</excludeRoot>
          </excludeRoots>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-core</artifactId>
            <version>${pmd.version}</version>
          </dependency>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-java</artifactId>
            <version>${pmd.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.gaul</groupId>
        <artifactId>modernizer-maven-plugin</artifactId>
        <version>${modernizer-maven-plugin.version}</version>
        <configuration>
          <javaVersion>11</javaVersion>
          <skip>${skipQA}</skip>
          <failOnViolations>true</failOnViolations>
        </configuration>
        <executions>
          <execution>
            <id>modernizer</id>
            <goals>
              <goal>modernizer</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.coveo</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <configuration>
          <verbose>false</verbose>
          <filesNamePattern>.*\.java</filesNamePattern>
          <skip>${skipQA}</skip>
          <style>aosp</style>
          <displayFiles>true</displayFiles>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>${fmt.action}</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <configuration>
          <skip>${skipQA}</skip>
          <keepBlankLines>true</keepBlankLines>
          <spaceBeforeCloseEmptyElement>false</spaceBeforeCloseEmptyElement>
          <createBackupFile>false</createBackupFile>
          <verifyFail>stop</verifyFail>
          <verifyFailOn>strict</verifyFailOn>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>${pom.fmt.action}</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <!-- see https://maven.apache.org/enforcer/enforcer-rules/index.html -->
                <requireMavenVersion>
                  <version>[3.8,)</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${java.version}</version>
                </requireJavaVersion>
                <bannedDependencies>
                  <excludes>
                    <exclude>junit:junit</exclude>
                    <exclude>org.hamcrest:hamcrest-core</exclude>
                  </excludes>
                </bannedDependencies>
                <banTransitiveDependencies>
                  <excludes>
                    <exclude>org.springframework.boot:spring-boot-starter-web</exclude>
                    <exclude>org.springframework.boot:spring-boot-starter-data-jpa</exclude>
                    <exclude>org.springframework.boot:spring-boot-starter-actuator</exclude>
                    <exclude>org.springframework.boot:spring-boot-starter-test</exclude>
                    <exclude>org.springframework.boot:spring-boot-starter-validation</exclude>
                    <!--
                    TODO this should be fixed; either by importing or exluding the transitive dependencies
                   org.tailormap:viewer-config-persistence:jar:5.9.12-SNAPSHOT:compile has transitive dependencies:
                      org.apache.commons:commons-lang3:jar:3.12.0:compile
                      commons-beanutils:commons-beanutils:jar:1.9.4:compile
                         commons-logging:commons-logging:jar:1.2:compile
                         commons-collections:commons-collections:jar:3.2.2:compile
                      commons-io:commons-io:jar:2.11.0:compile
                      org.json:json:jar:20210307:compile
                      org.hibernate:hibernate-entitymanager:jar:5.6.1.Final:compile
                         javax.persistence:javax.persistence-api:jar:2.2:compile
                         org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec:jar:1.1.1.Final:compile
                    -->
                    <exclude>org.tailormap:viewer-config-persistence</exclude>
                  </excludes>
                </banTransitiveDependencies>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <skip>${docker.skip}</skip>
          <verbose>true</verbose>
          <imagePullPolicy>IfNotPresent</imagePullPolicy>
          <images>
            <image>
              <!-- deploy snapshot tag -->
              <name>${docker.deploy.repo}/b3partners/%a:snapshot</name>
              <build>
                <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                <args>
                  <TAILORMAP_API_VERSION>${project.version}</TAILORMAP_API_VERSION>
                </args>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>docker-build</id>
            <goals>
              <goal>build</goal>
            </goals>
            <phase>package</phase>
          </execution>
          <execution>
            <id>docker-push</id>
            <goals>
              <goal>push</goal>
            </goals>
            <!-- NB for deploy/push login is required on ghcr.io or docker.b3p.nl repository with
                 docker - whatever value is ${docker.deploy.repo}
                 see: https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry -->
            <phase>deploy</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <pushChanges>true</pushChanges>
          <releaseProfiles>release</releaseProfiles>
          <tagNameFormat>tailormap-api-@{project.version}</tagNameFormat>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <configuration>
          <skipDeploy>true</skipDeploy>
          <generateSitemap>true</generateSitemap>
          <attach>false</attach>
          <outputEncoding>${project.build.sourceEncoding}</outputEncoding>
          <locales>en</locales>
          <relativizeDecorationLinks>false</relativizeDecorationLinks>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.skins</groupId>
            <artifactId>maven-fluido-skin</artifactId>
            <version>${maven-fluido-skin.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <artifactId>maven-scm-publish-plugin</artifactId>
        <configuration>
          <content>${project.reporting.outputDirectory}</content>
          <scmBranch>gh-pages</scmBranch>
          <tryUpdate>true</tryUpdate>
          <addUniqueDirectory>true</addUniqueDirectory>
          <checkoutDirectory>/tmp/gh-pages</checkoutDirectory>
        </configuration>
        <executions>
          <execution>
            <id>scm-publish</id>
            <!-- deploy site with maven-scm-publish-plugin -->
            <goals>
              <goal>publish-scm</goal>
            </goals>
            <phase>site-deploy</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>3.1.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <configuration>
          <rulesets>
            <ruleset>${project.basedir}/build/qa/pmd-ruleset.xml</ruleset>
            <ruleset>${project.basedir}/build/qa/pmd-junit-ruleset.xml</ruleset>
          </rulesets>
          <linkXRef>true</linkXRef>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.1.2</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>ci-management</report>
              <report>dependencies</report>
              <report>dependency-convergence</report>
              <report>dependency-management</report>
              <report>distribution-management</report>
              <report>index</report>
              <report>issue-management</report>
              <report>licenses</report>
              <report>plugin-management</report>
              <report>plugins</report>
              <report>scm</report>
              <report>summary</report>
              <report>team</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <configuration>
          <notimestamp>true</notimestamp>
          <failOnWarnings>${failOnValidation}</failOnWarnings>
          <failOnError>${failOnValidation}</failOnError>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>javadoc-no-fork</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-maven-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependency-updates-report</report>
              <report>plugin-updates-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <configuration>
          <title>Aggregate Test Coverage</title>
          <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
          <dataFileIncludes>
            <!-- this has merged u-test and i-test coverage -->
            <dataFileInclude>${project.build.directory}/jacoco.exec</dataFileInclude>
            <!-- NO! <dataFileInclude>${project.build.directory}/jacoco-it.exec</dataFileInclude>-->
          </dataFileIncludes>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
              <!-- NO! <report>report-integration</report>-->
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${dependency-check-maven.version}</version>
        <configuration>
          <name>OWASP Dependency Check</name>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
  <profiles>
    <profile>
      <!-- automagically activated during release with maven-release-plugin -->
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <compilerArgs>
                <arg>-Xlint:${compiler.lint}</arg>
              </compilerArgs>
            </configuration>
          </plugin>
          <plugin>
            <!-- deploy latest and versioned tag -->
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <verbose>true</verbose>
              <images>
                <image>
                  <name>${docker.deploy.repo}/b3partners/%a:%l</name>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>docker-tag</id>
                <goals>
                  <goal>tag</goal>
                </goals>
                <phase>verify</phase>
                <configuration>
                  <tagName>latest</tagName>
                  <repo>${docker.deploy.repo}/b3partners</repo>
                </configuration>
              </execution>
              <execution>
                <id>docker-push-latest</id>
                <goals>
                  <goal>push</goal>
                </goals>
                <phase>deploy</phase>
                <configuration>
                  <verbose>true</verbose>
                  <images>
                    <image>
                      <name>${docker.deploy.repo}/b3partners/%a:latest</name>
                    </image>
                  </images>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>macos</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <docker.skip>true</docker.skip>
      </properties>
    </profile>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <docker.skip>true</docker.skip>
      </properties>
    </profile>
    <profile>
      <!-- use this profile to deactivate QA actions and docker builds -->
      <id>developing</id>
      <properties>
        <docker.skip>true</docker.skip>
        <skipQA>true</skipQA>
      </properties>
    </profile>
    <profile>
      <!-- this profile will be activated in case the flag -DskipQA=true is passed to maven -->
      <id>qa-skip</id>
      <activation>
        <property>
          <name>skipQA</name>
          <value>true</value>
        </property>
      </activation>
      <properties>
        <skipQA>true</skipQA>
        <failOnWarnings>false</failOnWarnings>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <compilerArgs>
                <arg>-Xlint:${compiler.lint}</arg>
              </compilerArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
