<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.5.6</version>
  </parent>
  <groupId>nl.b3p.tailormap</groupId>
  <artifactId>tailormap-api</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>Tailormap API</name>
  <description>Tailormap API provides the OpenAPI for Tailormap</description>
  <url>https://github.com/B3Partners/tailormap-api/</url>
  <inceptionYear>2021</inceptionYear>
  <organization>
    <name>B3Partners B.V.</name>
    <url>https://www.b3partners.nl/</url>
  </organization>
  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://raw.githubusercontent.com/B3Partners/tailormap-api/main/LICENSE</url>
      <distribution>repo</distribution>
      <comments>For the tailormap-api code.</comments>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git@github.com:B3Partners/tailormap-api.git</connection>
    <developerConnection>scm:git:git@github.com:B3Partners/tailormap-api.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/B3Partners/tailormap-api/</url>
  </scm>
  <issueManagement>
    <system>Jira</system>
    <url>https://b3partners.atlassian.net/browse/TM</url>
  </issueManagement>
  <ciManagement>
    <system>Github Actions</system>
    <url>https://github.com/B3Partners/tailormap-api/actions</url>
  </ciManagement>
  <distributionManagement>
    <repository>
      <id>repo.b3p.nl</id>
      <name>B3Partners releases repository</name>
      <url>https://repo.b3p.nl/nexus/repository/releases/</url>
    </repository>
    <snapshotRepository>
      <id>repo.b3p.nl</id>
      <name>B3Partners snapshots repository</name>
      <url>https://repo.b3p.nl/nexus/repository/snapshots/</url>
    </snapshotRepository>
    <site>
      <id>gh-pages</id>
      <name>github pages site</name>
      <url>scm:git:ssh://git@github.com/b3partners/tailormap-api.git</url>
    </site>
  </distributionManagement>
  <properties>
    <java.version>11</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.build.sourceVersion>${java.version}</project.build.sourceVersion>
    <project.build.targetVersion>${java.version}</project.build.targetVersion>
    <project.build.outputTimestamp>2021-11-11T16:01:17Z</project.build.outputTimestamp>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <spring.boot.version>${project.parent.version}</spring.boot.version>
    <maven.surefire.version>3.0.0-M5</maven.surefire.version>
    <test.junit-jupiter.version>5.8.1</test.junit-jupiter.version>
    <jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
    <!-- alternatively ghcr.io  -->
    <docker-deploy-repo>docker.b3p.nl</docker-deploy-repo>
    <!-- skip QA checks -->
    <skipQA>false</skipQA>
    <errorProne.version>2.10.0</errorProne.version>
    <errorProneFlags></errorProneFlags>
    <compiler.lint>deprecation,unchecked</compiler.lint>
    <fmt.action>format</fmt.action>
    <pom.fmt.action>sort</pom.fmt.action>
  </properties>
  <dependencyManagement>
    <dependencies>
      <!--      <dependency>-->
      <!--        <groupId>org.springframework.boot</groupId>-->
      <!--        &lt;!&ndash;  <artifactId>spring-boot-starter-parent</artifactId> overerft van onderstaande &ndash;&gt;-->
      <!--        <artifactId>spring-boot-dependencies</artifactId>-->
      <!--        <version>${spring.boot.version}</version>-->
      <!--        <type>pom</type>-->
      <!--        <scope>import</scope>-->
      <!--      </dependency>-->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${test.junit-jupiter.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <defaultGoal>install</defaultGoal>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>${basedir}/src/main/resources</directory>
        <includes>
          <include>**/application*.yml</include>
          <include>**/application*.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <excludes>
          <exclude>**/application*.yml</exclude>
          <exclude>**/application*.properties</exclude>
        </excludes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <filtering>true</filtering>
        <directory>${basedir}/src/test/resources</directory>
        <includes>
          <include>**/application*.properties</include>
        </includes>
      </testResource>
      <testResource>
        <directory>${basedir}/src/test/resources</directory>
        <excludes>
          <exclude>**/application*.properties</exclude>
        </excludes>
      </testResource>
    </testResources>
    <!-- no version number on jar makes building docker image easier -->
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.0.0-M1</version>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.1.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <compilerArgs>
            <arg>-Xlint:${compiler.lint}</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.version}</version>
        <configuration>
          <!--suppress UnresolvedMavenProperty -->
          <argLine>${surefireArgLine}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven.surefire.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includes>
            <include>**/*IntegrationTest.java</include>
          </includes>
          <!--suppress UnresolvedMavenProperty -->
          <argLine>${failsafeArgLine}</argLine>
          <trimStackTrace>false</trimStackTrace>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>5.3.0</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>pre-integration-test</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <configuration>
              <propertyName>failsafeArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>post-integration-test</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report-integration</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring.boot.version}</version>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>6.5.0</version>
        <configuration>
          <skip>${skipQA}</skip>
          <enableExperimental>true</enableExperimental>
          <retirejs>
            <filterNonVulnerable>false</filterNonVulnerable>
          </retirejs>
          <suppressionFile>${project.basedir}/build/qa/owasp-suppression.xml</suppressionFile>
          <hintsFile>${project.basedir}/build/qa/owasp-hints.xml</hintsFile>
          <format>ALL</format>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.15.0</version>
        <configuration>
          <skip>${skipQA}</skip>
          <rulesets>
            <ruleset>${project.basedir}/build/qa/pmd-ruleset.xml</ruleset>
            <ruleset>${project.basedir}/build/qa/pmd-junit-ruleset.xml</ruleset>
          </rulesets>
          <failurePriority>3</failurePriority>
          <minimumPriority>3</minimumPriority>
          <verbose>true</verbose>
          <printFailingErrors>true</printFailingErrors>
          <includeTests>true</includeTests>
          <excludeRoots>
            <excludeRoot>target/generated-sources</excludeRoot>
          </excludeRoots>
          <excludes></excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.coveo</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>2.4.0</version>
        <executions>
          <execution>
            <goals>
              <goal>${fmt.action}</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <verbose>false</verbose>
          <filesNamePattern>.*\.java</filesNamePattern>
          <skip>${skipQA}</skip>
          <style>aosp</style>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <version>2.15.0</version>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>${pom.fmt.action}</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skip>${skipQA}</skip>
          <keepBlankLines>true</keepBlankLines>
          <spaceBeforeCloseEmptyElement>false</spaceBeforeCloseEmptyElement>
          <createBackupFile>false</createBackupFile>
          <verifyFail>stop</verifyFail>
          <verifyFailOn>strict</verifyFailOn>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.8,)</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${java.version}</version>
                </requireJavaVersion>
                <bannedDependencies>
                  <excludes>
                    <exclude>junit:junit</exclude>
                    <exclude>org.hamcrest:hamcrest-core</exclude>
                  </excludes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.38.0</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>docker-build</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>docker-push</id>
            <!-- NB for deploy/push login is required on ghcr.io or docker.b3p.nl repository with
                 docker - whatever value is ${docker-deploy-repo}
                 see: https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry -->
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <verbose>true</verbose>
          <imagePullPolicy>IfNotPresent</imagePullPolicy>
          <images>
            <image>
              <!-- deploy snapshot tag -->
              <name>${docker-deploy-repo}/b3partners/%a:snapshot</name>
              <build>
                <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                <args>
                  <TAILORMAP_API_VERSION>${project.version}</TAILORMAP_API_VERSION>
                </args>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-scm-publish-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <scmBranch>gh-pages</scmBranch>
          <tryUpdate>true</tryUpdate>
          <addUniqueDirectory>true</addUniqueDirectory>
          <checkoutDirectory>/tmp/gh-pages</checkoutDirectory>
          <content>/tmp/staging</content>
          <!-- skipCheckin>true</skipCheckin -->
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.0.0-M4</version>
        <configuration>
          <pushChanges>true</pushChanges>
          <releaseProfiles>release</releaseProfiles>
          <tagNameFormat>tailormap-api-@{project.version}</tagNameFormat>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <!-- automagically activated during release with maven-release-plugin -->
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <!-- deploy latest and versioned tag -->
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>docker-tag</id>
                <phase>verify</phase>
                <goals>
                  <goal>tag</goal>
                </goals>
                <configuration>
                  <tagName>latest</tagName>
                  <repo>${docker-deploy-repo}/b3partners</repo>
                </configuration>
              </execution>
              <execution>
                <id>docker-push-latest</id>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
                <configuration>
                  <verbose>true</verbose>
                  <images>
                    <image>
                      <name>${docker-deploy-repo}/b3partners/%a:latest</name>
                    </image>
                  </images>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <verbose>true</verbose>
              <images>
                <image>
                  <name>${docker-deploy-repo}/b3partners/%a:%l</name>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- this profile will be activated in case the flag -DskipQA=true is passed to maven -->
      <id>qa-skip</id>
      <activation>
        <property>
          <name>skipQA</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.0</version>
            <configuration>
              <fork>true</fork>
              <compilerArgs combine.children="append">
                <arg>-XDcompilePolicy=simple</arg>
                <arg>-Xplugin:ErrorProne -XepExcludedPaths:${project.build.directory}/generated-sources/.* ${errorProneFlags}</arg>
                <arg>-Xlint:${compiler.lint}</arg>
                <arg>-Werror</arg>
                <arg>-Xmaxwarns</arg>
                <arg>1000</arg>
              </compilerArgs>
              <annotationProcessorPaths>
                <path>
                  <groupId>com.google.errorprone</groupId>
                  <artifactId>error_prone_core</artifactId>
                  <version>${errorProne.version}</version>
                </path>
              </annotationProcessorPaths>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <properties>
        <skipQA>true</skipQA>
      </properties>
    </profile>
  </profiles>
</project>
