#
# Copyright (C) 2023 B3Partners B.V.
#
# SPDX-License-Identifier: MIT
#
openapi: 3.0.3

info:
  title: 'persistence-schemas'
  description: 'Schemas used for JSON persistence.'
  version: '1.0'

servers: [ ]
paths: { }

components:
  schemas:
    GeoServiceProtocol:
      $ref: './common-schemas.yaml#/components/schemas/GeoServiceProtocol'

    CatalogNode:
      description: Categorization for items in the catalog.
      properties:
        id:
          type: string
        title:
          type: string
        root:
          type: boolean
        children:
          type: array
          items:
            type: string
        items:
          type: array
          items:
            title: TailormapObjectRef
            type: object
            properties:
              kind:
                type: string
                enum: ['geo-service', 'feature-source']
              id:
                type: string

    TMServiceCaps:
      type: object
      properties:
        serviceInfo:
          title: TMServiceInfo
          type: object
          properties:
            title:
              type: string
            keywords:
              type: array
              items:
                type: string
              uniqueItems: true
            description:
              type: string
            publisher:
              type: string
              format: uri
            schema:
              type: string
              format: uri
            source:
              type: string
              format: uri
        capabilities:
          type: object
          properties:
            version:
              type: string
            updateSequence:
              type: string
            abstractText:
              type: string
            request:
              title: TMServiceCapabilitiesRequest
              type: object
              properties:
                get-map:
                  type: object
                  properties:
                    formats:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                get-feature-info:
                  title: TMServiceCapabilitiesRequestGetFeatureInfo
                  type: object
                  properties:
                    formats:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                describe-layer:
                  type: boolean

    TMFeatureTypeInfo:
      type: object
      properties:
        keywords:
          type: array
          items:
            type: string
          uniqueItems: true
        description:
          type: string
        publisher:
          type: string
          format: uri
        schema:
          type: string
          format: uri
        source:
          type: string
          format: uri
        bounds:
          $ref: './common-schemas.yaml#/components/schemas/Bounds'
        crs:
          type: string
        wgs84BoundingBox:
          $ref: './common-schemas.yaml#/components/schemas/Bounds'
        defaultSrs:
          type: string
        otherSrs:
          items:
            type: string
          uniqueItems: true
        outputFormats:
          items:
            type: string
          uniqueItems: true
        abstractText:
          type: string

    TMAttributeType:
      $ref: './common-schemas.yaml#/components/schemas/TMAttributeType'

    ServiceAuthentication:
      properties:
        method:
          type: string
          enum:
            - password
        username:
          type: string
        password:
          type: string

    JDBCConnectionProperties:
      type: object
      properties:
        dbtype:
          type: string
          enum:
            - postgis
            - oracle
            - sqlserver
        database:
          type: string
        port:
          type: integer
          nullable: false
        host:
          type: string
        schema:
          type: string
        fetchSize:
          type: integer
        primaryKeyMetadataTable:
          type: string
        geometryMetadataTable:
          type: string
        additionalProperties:
          type: object
          additionalProperties:
            type: string

    GeoServiceSettings:
      description: Settings applying to a GeoService.
      required: [serverType, defaultLayerSettings]
      properties:
        serverType:
          description: Server type to use for vendor-specific capabilities (high DPI, legends, etc.)
          type: string
          enum:
            - auto
            - disabled
            - geoserver
            - mapserver
          nullable: false
          default: auto
        defaultLayerSettings:
          title: GeoServiceDefaultLayerSettings
          description: Default settings for all layers of this service which can be overridden on a per-layer basis.
          anyOf:
            - $ref: '#/components/schemas/LayerSettings'
            - $ref: '#/components/schemas/WMSLayerSettings'
            - $ref: '#/components/schemas/WMTSLayerSettings'
          default:
        layerSettings:
          title: GeoServiceLayerSettings
          type: object
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/LayerSettings'
              - $ref: '#/components/schemas/WMSLayerSettings'
              - $ref: '#/components/schemas/WMTSLayerSettings'
          example:
            'myLayer':
              title: Some other title
            'otherLayer':
              hiDpiDisabled: true

    LayerSettings:
      description: Settings applying to any kind of layer.
      required: [title, hiDpiDisabled]
      properties:
        title:
          description: Override default title, null if not overridden.
          type: string
        hiDpiDisabled:
          type: boolean
          default: false

    WMSLayerSettings:
      description: Settings applying to a WMS layer.
      allOf:
        - $ref: '#/components/schemas/LayerSettings'
        - type: object
          required: [tilingDisabled, tilingGutter]
          properties:
            tilingDisabled:
              type: boolean
              default: false
            tilingGutter:
              type: integer
              # TODO: set global default here or in frontend?

    WMTSLayerSettings:
      description: Settings applying to a WMTS layer.
      allOf:
        - $ref: '#/components/schemas/LayerSettings'
        - type: object
          properties:
            hiDpiMode:
              $ref: './common-schemas.yaml#/components/schemas/TileLayerHiDpiMode'
            hiDpiSubstituteLayer:
              description: Layer name of this service to substitute when rendering at high dpi.
              type: string

    GeoServiceLayer:
      description: Layer of a service which can be an OGC WMS/WMTS service or from XYZ/ArcGIS REST.
      required: [name, root, virtual, children]
      properties:
        # TODO: heeft een WMS virtual grouplayer wel een naam?
        name:
          type: string
        root:
          type: boolean
        title:
          type: string
        virtual:
          type: boolean
        maxScale:
          type: number
          format: double
        minScale:
          type: number
          format: double
        attribution:
          type: string
        abstractText:
          type: string
        children:
          type: array
          items:
            # layer name
            type: string

    # TODO: slimmigheden zoals ook nieuwe lagen opnemen met defaults, default configs, etc.
    AppContent:
      description: Configuration for including content (layers) in an application.
      properties:
        baseLayers:
          title: BaseLayer
          type: array
          items:
            type: object
            required: [title, layers]
            properties:
              title:
                type: string
              layers:
                type: array
                items:
                  $ref: '#/components/schemas/AppLayerRef'
        layers:
          type: array
          items:
            # TODO oneOf opties voor meerdere soorten content?
            $ref: '#/components/schemas/AppLayerRef'
        children:
          type: array
          items:
            $ref: '#/components/schemas/AppContent'

    AppLayerRef:
      required: [serviceId, layerName, visible, opacity]
      properties:
        serviceId:
          type: integer
          format: int64
          nullable: false
        layerName:
          type: string
          nullable: false
        title:
          type: string
        visible:
          type: boolean
          nullable: false
          default: true
        opacity:
          type: integer
          nullable: false
          default: 100