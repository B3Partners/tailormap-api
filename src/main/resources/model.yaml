#
# Copyright (C) 2021 B3Partners B.V.
#
# SPDX-License-Identifier: MIT
#
openapi: 3.0.3
info:
  title: 'models'
  description: 'Tailormap API models has all the models for the Tailormap API.'
  version: '1.0'
  license:
    name: 'MIT'
    url: 'https://mit-license.org/'
  contact:
    name: 'B3Partners BV'
    url: 'https://www.b3partners.nl/'
    email: 'info@b3partners.nl'

# none; specified in tailormap-api.yaml
servers: [ ]
# none; specified in tailormap-api.yaml
paths: { }

components:
  schemas:
    CoordinateReferenceSystem:
      description: '
      Well-known and client-supported EPSG code.
      Currently Rijksdriehoek/WGS84, new/TODO Web Mercator.
      '
      type: object
      default: {
        'code': 'EPSG:28992',
        'definition': '+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +towgs84=565.417,50.3319,465.552,-0.398957,0.343988,-1.8774,4.0725 +units=m +no_defs',
        'area': {
          'miny': 646.36,
          'minx': 308975.28,
          'maxy': 276050.82,
          'maxx': 636456.31
        } }
      properties:
        code:
          description: 'the EPSG code'
          type: string
        definition:
          description: 'PROJ4 string'
          type: string
        area:
          description: 'Area of validity of this CRS'
          type: object
          properties:
            schema:
              $ref: '#/components/schemas/Bounds'
          nullable: true
      example:
        code: 'EPSG:28992'
        definition: '+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +towgs84=565.417,50.3319,465.552,-0.398957,0.343988,-1.8774,4.0725 +units=m +no_defs'
        area: {
          miny: 646.36,
          minx: 308975.28,
          maxy: 276050.82,
          maxx: 636456.31
        }

    Bounds:
      description: 'Describes an extent within a Coordinate Reference System'
      type: object
      properties:
        miny:
          description: 'lower bottom'
          type: number
        minx:
          description: 'lower left'
          type: number
        maxy:
          description: 'upper top'
          type: number
        maxx:
          description: 'upper right'
          type: number
        crs:
          description: '(EPSG) code of the projection'
          type: string
          nullable: true
      example:
        miny: 400000
        minx: 105000
        maxy: 530000
        maxx: 275000
        crs: 'EPSG:28992'


    AppLayer:
      description: '
      A map layer, but only enough information to draw the layer.
      For advanced functionality that required access to attributes the LayerDetails should be requested.
      '
      type: object
      properties:
        # TODO aanvullen?
        id:
          type: integer
          format: int64
        url:
          type: string
        serviceId:
          type: integer
          format: int64
        visible:
          type: boolean
        crs:
          # Since at some point in time we may support client-side reprojection eg. for vector-tiles'
          $ref: '#/components/schemas/CoordinateReferenceSystem'
        isBaseLayer:
          type: boolean
          default: false

    LayerDetails:
      description: 'All details of an app layer.'
      type: object
      properties:
        # TODO aanvullen
        id:
          type: integer
          format: int64
        featuretypeName:
          type: string
        serviceId:
          type: integer
          format: int64
        geometryAttribute:
          type: string
        geometryAttributeIndex:
          description: 'index of the geometryAttribute in the array of attributes.'
          type: integer
          format: int32
        geometryType:
          description: '(editable) geometry type of this layer.
        We can have multiple geometry attributes in a layer, but only one is rendered and
        optionally editable) see also see also: nl.tailormap.viewer.config.services.AttributeDescriptor'
          type: string
          enum:
            - 'linestring'
            - 'multilinestring'
            - 'point'
            - 'multipoint'
            - 'polygon'
            - 'multipolygon'
            - 'geometry'
        editable:
          type: boolean
          default: false
        metadata:
          type: string
          nullable: true
        relations:
          type: array
          minLength: 0
          items:
            type: object
            properties:
              featureType:
                type: integer
                format: int64
              foreignFeatureType:
                type: integer
                format: int64
              type:
                type: string
                enum:
                  - 'relate'
                  - 'join'
        attributes:
          description: '
          Array with attributes.
          **note** that the ordering of this array is determined in the backend and does not need
          to coincide with the actual data in the data source.
          '
          type: array
          items:
            $ref: '#/components/schemas/Attribute'

    Attribute:
      type: object
      properties:
        id:
          type: integer
          format: int64
        featureType:
          type: integer
          format: int64
        name:
          type: string
        longname:
          description: 'has featuretype name and name combined with a dot.'
          example: 'v_factsheet_terrein_info.b_minhuur'
          type: string
        editAlias:
          type: string
        type:
          description: 'data type. eg "date" or "string".
          see also: nl.tailormap.viewer.config.services.AttributeDescriptor'
          type: string
          enum:
            - 'date'
            - 'timestamp'
            - 'string'
            - 'double'
            - 'integer'
            - 'boolean'
            - 'linestring'
            - 'multilinestring'
            - 'point'
            - 'multipoint'
            - 'polygon'
            - 'multipolygon'
            - 'geometry'
        visible:
          type: boolean
        selectable:
          type: boolean
        filterable:
          type: boolean
        folder_label:
          type: string
        # editing: TODO needs work / ook integratie met feature API
        editable:
          type: boolean
        defaultValue:
          type: string
        disallowNullValue:
          type: boolean
        disableUserEdit:
          type: boolean
        allowValueListOnly:
          type: boolean
        automaticValue:
          type: boolean
        valueList:
          type: string
          example: 'static'
        editValues:
          type: array
          items:
            oneOf:
              - type: string
              - type: boolean
              - type: number


    Service:
      description: 'A service provides one or more applayers'
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          nullable: false
        url:
          type: string
          nullable: false
        useProxy:
          type: boolean
          default: false
        styleLibraries:
          type: object
        protocol:
          type: string
          enum:
            - tiled
            - wms
            - arcgis
        tilingProtocol:
          type: string
          enum:
            - WMTS
            - TMS
        # in de huidige TM gaan alle matrixsets naar de client,
        # dat lijkt mij teveel van het goede; er kan er immers maar 1 gebruikt worden.
        # TODO uitzoeken of openlayers meer dan 1 matrixset per map kan gebruiken,
        #      anders kan deze hier weg en moet die naar de "map"
        matrixSet:
          type: object


    Component:
      description: 'a component to be used in the application'
      type: object
      properties:
        type:
          description: 'component type eg. featurereport or print'
          type: string
          required: true
        config:
          type: object
          properties:
            label:
              type: string
            title:
              type: string
            tooltip:
              type: string
          additionalProperties: true
      example:
        type: 'featurereport'
        config: {
          template: 'FeatureReport.xsl',
          legendLayers: [ ],
          numOfRelatedFeatures: 10,
          reportLayers: [ ],
          label: '',
          title: 'FeatureReport',
          subTitle: 'detail about parcel $1',
          layers: [ ]
        }