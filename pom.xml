<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2021 B3Partners B.V.

SPDX-License-Identifier: MIT
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.8</version>
    </parent>
    <groupId>nl.b3p.tailormap</groupId>
    <artifactId>tailormap-api</artifactId>
    <version>10.1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>Tailormap API</name>
    <description>Tailormap API provides the backend for Tailormap</description>
    <url>https://github.com/B3Partners/tailormap-api/</url>
    <inceptionYear>2021</inceptionYear>
    <organization>
        <name>B3Partners B.V.</name>
        <url>https://www.b3partners.nl/</url>
    </organization>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://raw.githubusercontent.com/B3Partners/tailormap-api/main/LICENSES/MIT.txt</url>
            <distribution>repo</distribution>
            <comments>For the tailormap-api code.</comments>
        </license>
        <license>
            <name>CC0-1.0</name>
            <url>https://raw.githubusercontent.com/B3Partners/tailormap-api/main/LICENSES/CC0-1.0.txt</url>
            <distribution>repo</distribution>
            <comments>For the tailormap-api documentation.</comments>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>matthijsln</id>
            <name>Matthijs Laan</name>
            <email>matthijslaan@b3partners.nl</email>
            <organization>B3Partners B.V.</organization>
            <organizationUrl>https://www.b3partners.nl</organizationUrl>
        </developer>
        <developer>
            <id>mprins</id>
            <name>Mark Prins</name>
            <email>mark@b3partners.nl</email>
            <organization>B3Partners B.V.</organization>
            <organizationUrl>https://www.b3partners.nl</organizationUrl>
        </developer>
        <developer>
            <id>geertplaisier</id>
            <name>Geert Plaisier</name>
            <email>geert@b3partners.nl</email>
            <organization>Gnamic</organization>
            <organizationUrl>https://www.gnamic.nl/</organizationUrl>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:git@github.com:B3Partners/tailormap-api.git</connection>
        <developerConnection>scm:git:git@github.com:B3Partners/tailormap-api.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/B3Partners/tailormap-api/</url>
    </scm>
    <issueManagement>
        <system>Jira</system>
        <url>https://b3partners.atlassian.net/browse/HTM</url>
    </issueManagement>
    <ciManagement>
        <system>Github Actions</system>
        <url>https://github.com/B3Partners/tailormap-api/actions</url>
    </ciManagement>
    <distributionManagement>
        <repository>
            <id>repo.b3p.nl</id>
            <name>B3Partners releases repository</name>
            <url>https://repo.b3p.nl/nexus/repository/releases/</url>
        </repository>
        <snapshotRepository>
            <id>repo.b3p.nl</id>
            <name>B3Partners snapshots repository</name>
            <url>https://repo.b3p.nl/nexus/repository/snapshots/</url>
        </snapshotRepository>
        <site>
            <id>gh-pages</id>
            <name>github pages site</name>
            <url>scm:git:ssh://git@github.com/b3partners/tailormap-api.git</url>
        </site>
    </distributionManagement>
    <properties>
        <java.version>11</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceVersion>${java.version}</project.build.sourceVersion>
        <project.build.targetVersion>${java.version}</project.build.targetVersion>
        <project.build.outputTimestamp>2023-01-20T18:37:45Z</project.build.outputTimestamp>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <geotools.version>28.1</geotools.version>
        <jts.version>1.19.0</jts.version>
        <spring.boot.version>${project.parent.version}</spring.boot.version>
        <!--
    Spring-Boot version overrides. see org.springframework.boot:spring-boot-dependencies
    eg. https://search.maven.org/artifact/org.springframework.boot/spring-boot-dependencies

    and use
        mvn -U org.codehaus.mojo:versions-maven-plugin:display-dependency-updates
    and
        mvn -U org.codehaus.mojo:versions-maven-plugin:display-plugin-updates
    to check
    -->
        <jackson-bom.version>2.14.2</jackson-bom.version>
        <micrometer.version>1.10.3</micrometer.version>
        <hibernate.version>5.6.14.Final</hibernate.version>
        <junit-jupiter.version>5.9.2</junit-jupiter.version>
        <mssql-jdbc.version>12.2.0.jre11</mssql-jdbc.version>
        <oracle-database.version>21.9.0.0</oracle-database.version>
        <postgresql.version>42.5.3</postgresql.version>
        <snakeyaml.version>1.33</snakeyaml.version>
        <spring-security.version>5.8.0</spring-security.version>
        <!-- Don't upgrade these; there are some fixed dependencies on org/slf4j/impl/StaticLoggerBinder
    <logback.version>1.4.1</logback.version>
    <slf4j.version>2.0.2</slf4j.version>
    -->
        <webjars-locator-core.version>0.52</webjars-locator-core.version>
        <maven.surefire.version>3.0.0-M7</maven.surefire.version>
        <maven-surefire-plugin.version>${maven.surefire.version}</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>${maven.surefire.version}</maven-failsafe-plugin.version>
        <maven-deploy-plugin.version>3.0.0</maven-deploy-plugin.version>
        <maven-install-plugin.version>3.0.1</maven-install-plugin.version>
        <maven-javadoc-plugin.version>3.5.0</maven-javadoc-plugin.version>
        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <maven-assembly-plugin.version>3.4.2</maven-assembly-plugin.version>
        <maven-enforcer-plugin.version>3.1.0</maven-enforcer-plugin.version>
        <maven-install-plugin.version>3.0.1</maven-install-plugin.version>
        <maven-resources-plugin.version>3.3.0</maven-resources-plugin.version>
        <!-- end version overrides -->
        <maven-pmd-plugin.version>3.20.0</maven-pmd-plugin.version>
        <versions-maven-plugin.version>2.14.2</versions-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
        <dependency-check-maven.version>8.1.0</dependency-check-maven.version>
        <modernizer-maven-plugin.version>2.5.0</modernizer-maven-plugin.version>
        <!-- docker.b3p.nl or alternatively ghcr.io  -->
        <docker.deploy.repo>ghcr.io</docker.deploy.repo>
        <!-- skip QA checks -->
        <skipQA>false</skipQA>
        <pmd.version>6.54.0</pmd.version>
        <errorProne.version>2.16</errorProne.version>
        <errorProneFlags>-XepDisableWarningsInGeneratedCode</errorProneFlags>
        <compiler.lint>deprecation,unchecked</compiler.lint>
        <failOnValidation>true</failOnValidation>
        <fmt.action>format</fmt.action>
        <pom.fmt.action>sort</pom.fmt.action>
        <docker.skip>false</docker.skip>
        <maven-fluido-skin.version>2.0.0-M3</maven-fluido-skin.version>
        <swagger-ui.version>4.15.5</swagger-ui.version>
        <sentry.version>6.13.1</sentry.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-annotations</artifactId>
                <version>${modernizer-maven-plugin.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-micrometer</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm.tooling</groupId>
            <artifactId>hibernate-enhance-maven-plugin</artifactId>
            <version>${hibernate.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.hypersistence</groupId>
            <artifactId>hypersistence-utils-hibernate-55</artifactId>
            <version>3.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <!--
          this (broken!) transitive dependency from org.skyscreamer:jsonassert:jar:1.5.0:test conflicts
          with org.json.json from nl.b3p.tailormap:tailormap-persistence
          -->
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.hateoas</groupId>
            <artifactId>spring-hateoas</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit-pioneer</groupId>
            <artifactId>junit-pioneer</artifactId>
            <version>2.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- provides @SuppressModernizer that can be used on method to suppress the Modernizer plugin -->
            <groupId>org.gaul</groupId>
            <artifactId>modernizer-maven-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker-qual</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc11</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.locationtech.jts</groupId>
            <artifactId>jts-core</artifactId>
            <version>${jts.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-main</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geojson-core</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-wfs-ng</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-metadata</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools.xsd</groupId>
            <artifactId>gt-xsd-core</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools.xsd</groupId>
            <artifactId>gt-xsd-gml3</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-http</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-cql</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-xml</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-wms</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-wmts</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-opengis</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-referencing</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-epsg-hsql</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-jdbc</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools.jdbc</groupId>
            <artifactId>gt-jdbc-oracle</artifactId>
            <version>${geotools.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.oracle.database.jdbc</groupId>
                    <artifactId>ojdbc8</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.geotools.jdbc</groupId>
            <artifactId>gt-jdbc-postgis</artifactId>
            <version>${geotools.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.geotools.jdbc</groupId>
            <artifactId>gt-jdbc-sqlserver</artifactId>
            <version>${geotools.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>net.sourceforge.jtds</groupId>
                    <artifactId>jtds</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.microsoft.sqlserver</groupId>
                    <artifactId>mssql-jdbc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>2.2.8</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>swagger-ui</artifactId>
            <version>${swagger-ui.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry-spring-boot-starter</artifactId>
            <version>${sentry.version}</version>
        </dependency>
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry-jdbc</artifactId>
            <version>${sentry.version}</version>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>B3Partners</id>
            <name>Releases hosted by B3Partners</name>
            <url>https://repo.b3p.nl/nexus/repository/public/</url>
        </repository>
    </repositories>
    <build>
        <defaultGoal>install</defaultGoal>
        <!-- no version number on jar makes building docker image easier -->
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/index.html</include>
                    <include>**/application*.properties</include>
                    <include>**/git.properties</include>
                    <include>**/spy.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>**/index.html</exclude>
                    <exclude>**/application*.properties</exclude>
                    <exclude>**/git.properties</exclude>
                    <exclude>**/spy.properties</exclude>
                </excludes>
            </resource>
            <resource>
                <targetPath>static/swagger-ui</targetPath>
                <filtering>false</filtering>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/*.yaml</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>${basedir}/src/test/resources</directory>
                <includes>
                    <include>**/application*.properties</include>
                </includes>
            </testResource>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
                <excludes>
                    <exclude>**/application*.properties</exclude>
                </excludes>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>6.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.hibernate.orm.tooling</groupId>
                    <artifactId>hibernate-enhance-maven-plugin</artifactId>
                    <version>${hibernate.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check-maven.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.ekryd.sortpom</groupId>
                    <artifactId>sortpom-maven-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <groupId>com.spotify.fmt</groupId>
                    <artifactId>fmt-maven-plugin</artifactId>
                    <version>2.19</version>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.41.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-scm-publish-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>4.0.0-M5</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>3.0.0-M7</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <version>5.0.0</version>
                <configuration>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                </configuration>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>nl/b3p/tailormap/api/model/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <goals>
                            <goal>merge</goal>
                            <goal>report-integration</goal>
                            <goal>report</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!--suppress UnresolvedMavenProperty -->
                    <argLine>${surefireArgLine}</argLine>
                    <excludes>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
            </plugin>
            <plugin>
                <!-- Required for lazy fetching of properties, see https://vladmihalcea.com/the-best-way-to-lazy-load-entity-attributes-using-jpa-and-hibernate/ -->
                <groupId>org.hibernate.orm.tooling</groupId>
                <artifactId>hibernate-enhance-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                        <configuration>
                            <failOnError>true</failOnError>
                            <enableLazyInitialization>true</enableLazyInitialization>
                            <enableDirtyTracking>true</enableDirtyTracking>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <classifier>exec</classifier>
                    <cleanCache>true</cleanCache>
                    <!--suppress UnresolvedMavenProperty -->
                    <jvmArguments>${surefireArgLine}</jvmArguments>
                    <!-- wait between attempts, default 500 ms -->
                    <wait>1000</wait>
                    <!-- max attempts to check if application is up, default 60 -->
                    <maxAttempts>120</maxAttempts>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>start-spring-boot</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <!-- <skip>${skipQA}</skip> -->
                            <!--suppress UnresolvedMavenProperty -->
                            <skip>${skipTests}</skip>
                            <profiles>
                                <profile>test</profile>
                            </profiles>
                            <!--suppress UnresolvedMavenProperty -->
                            <jvmArguments>${failsafeArgLine}</jvmArguments>
                            <useTestClasspath>true</useTestClasspath>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-spring-boot</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <!-- <skip>${skipQA}</skip> -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <compilerArgs combine.children="append">
                        <arg>-XDcompilePolicy=simple</arg>
                        <arg>-Xplugin:ErrorProne -XepExcludedPaths:${project.build.directory}/generated-sources/.* ${errorProneFlags}</arg>
                        <arg>-Xlint:${compiler.lint}</arg>
                        <arg>-Werror</arg>
                        <arg>-Xmaxwarns</arg>
                        <arg>1000</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_core</artifactId>
                            <version>${errorProne.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <excludes>
                        <exclude>**/FeaturesController*.java</exclude>
                        <exclude>**/GeoServiceProxyController*.java</exclude>
                        <exclude>**/LayerDescriptionController*.java</exclude>
                        <exclude>**/LayerExportController*.java</exclude>
                        <exclude>**/UniqueValuesController*.java</exclude>
                        <exclude>**/MicrometerHelper.java</exclude>
                        <exclude>**/MetadataRepositoryTest.java</exclude>
                    </excludes>
                    <testExcludes>
                        <exclude>**/FeaturesController*.java</exclude>
                        <exclude>**/GeoServiceProxyController*.java</exclude>
                        <exclude>**/LayerDescriptionController*.java</exclude>
                        <exclude>**/LayerExportController*.java</exclude>
                        <exclude>**/MapControllerIntegrationTest.java</exclude>
                        <exclude>**/MapControllerPostgresIntegrationTest.java</exclude>
                        <exclude>**/UniqueValuesController*.java</exclude>
                        <exclude>**/nl/b3p/tailormap/api/repository/ApplicationRepositoryTest.java</exclude>
                    </testExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-code-persistence-models</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi/persistence-schemas.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <modelPackage>nl.b3p.tailormap.api.persistence.json</modelPackage>
                            <library>spring-boot</library>
                            <!--              <generateAliasAsModel>false</generateAliasAsModel>-->
                            <configOptions>
                                <!-- see https://openapi-generator.tech/docs/generators/spring/ -->
                                <dateLibrary>java8</dateLibrary>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                <openApiNullable>false</openApiNullable>
                                <serializableModel>true</serializableModel>
                                <useOptional>true</useOptional>
                            </configOptions>
                            <!--              <instantiationTypes>array=ArrayList,map=HashMap,object=Map</instantiationTypes>-->
                            <!--              <typeMappings>array=List,map=Map,object=Map</typeMappings>-->
                            <generateApis>false</generateApis>
                            <generateModels>true</generateModels>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateModelTests>false</generateModelTests>
                            <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-viewer-models</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- see https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator-maven-plugin -->
                            <inputSpec>${project.basedir}/src/main/resources/openapi/viewer-api.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <modelPackage>nl.b3p.tailormap.api.viewer.model</modelPackage>
                            <!--<invokerPackage>nl.b3p.tailormap.api.invoker</invokerPackage>-->
                            <library>spring-boot</library>
                            <!--              <generateAliasAsModel>false</generateAliasAsModel>-->
                            <configOptions>
                                <!-- see https://openapi-generator.tech/docs/generators/spring/ -->
                                <dateLibrary>java8</dateLibrary>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                <openApiNullable>false</openApiNullable>
                                <serializableModel>true</serializableModel>
                                <useOptional>true</useOptional>
                            </configOptions>
                            <!-- All common models from common-schemas.yaml here, comma separated -->
                            <importMappings>TileLayerHiDpiMode=nl.b3p.tailormap.api.persistence.json.TileLayerHiDpiMode,GeoServiceProtocol=nl.b3p.tailormap.api.persistence.json.GeoServiceProtocol</importMappings>
                            <ignoreFileOverride>${project.basedir}/src/main/resources/openapi/common-schemas-openapi-ignore</ignoreFileOverride>
                            <!--              <instantiationTypes>array=ArrayList,map=HashMap,object=Map</instantiationTypes>-->
                            <!--              <typeMappings>array=List,map=Map,object=Map</typeMappings>-->
                            <generateApis>false</generateApis>
                            <generateModels>true</generateModels>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateModelTests>true</generateModelTests>
                            <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-spec</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi/viewer-api.yaml</inputSpec>
                            <generatorName>openapi</generatorName>
                            <output>${project.build.directory}/classes/static/swagger-ui</output>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>fix-generated-sources</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>process-sources</phase>
                        <configuration>
                            <target name="fix-generated-sources">
                                <!-- work around a stupid bug in the openapi generator plugin that can't do this right -->
                                <!--                <replace file="target/generated-sources/openapi/src/main/java/nl/b3p/tailormap/api/model/Component.java" summary="true">-->
                                <!--                  <replacetoken><![CDATA[private Map<String, String> config = ;]]></replacetoken>-->
                                <!--                  <replacevalue><![CDATA[private Map<String, String> config = new HashMap<>();]]></replacevalue>-->
                                <!--                </replace>-->
                                <!-- remove unused imports, this bug seems to be resolved in openapi-generator-maven-plugin 5.4.0
                <replace dir="target/generated-sources/openapi/src/main/java/nl/b3p/tailormap/api/model/" summary="true">
                  <replacetoken><![CDATA[import io.swagger.annotations.ApiModel;]]></replacetoken>
                  <replacevalue></replacevalue>
                </replace>
                <replace dir="target/generated-sources/openapi/src/main/java/nl/b3p/tailormap/api/model/" summary="true">
                  <replacetoken><![CDATA[import io.swagger.annotations.ApiModelProperty;]]></replacetoken>
                  <replacevalue></replacevalue>
                </replace>
                -->
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <!-- temporarily disabled -->
                    <excludePackageNames>nl.b3p.tailormap.*</excludePackageNames>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadoc</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>verify</phase>
                        <configuration>
                            <notimestamp>true</notimestamp>
                            <failOnWarnings>false</failOnWarnings>
                            <failOnError>${failOnValidation}</failOnError>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-webjars</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <!-- for some reason we need to manually extract some webjar stuff to make things work... -->
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.webjars</groupId>
                                    <artifactId>swagger-ui</artifactId>
                                    <version>${swagger-ui.version}</version>
                                    <includes>META-INF/resources/webjars/**/*</includes>
                                    <excludes>META-INF/resources/webjars/**/*index.html</excludes>
                                    <excludes>META-INF/resources/webjars/**/**.gz</excludes>
                                    <excludes>META-INF/resources/webjars/**/*.map</excludes>
                                    <outputDirectory>${project.basedir}/target/classes/</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- not bound to any lifecycle, but can be run from commandline using:
        mvn -U install -DskipTests -DskipITs -Ddocker.skip=true org.owasp:dependency-check-maven:check -->
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <configuration>
                    <skip>${skipQA}</skip>
                    <suppressionFile>${project.basedir}/build/qa/owasp-suppression.xml</suppressionFile>
                    <hintsFile>${project.basedir}/build/qa/owasp-hints.xml</hintsFile>
                    <format>ALL</format>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <skip>${skipQA}</skip>
                    <rulesets>
                        <ruleset>${project.basedir}/build/qa/pmd-ruleset.xml</ruleset>
                        <ruleset>${project.basedir}/build/qa/pmd-junit-ruleset.xml</ruleset>
                    </rulesets>
                    <failurePriority>3</failurePriority>
                    <minimumPriority>3</minimumPriority>
                    <verbose>true</verbose>
                    <printFailingErrors>true</printFailingErrors>
                    <includeTests>true</includeTests>
                    <excludeRoots>
                        <excludeRoot>target/generated-sources</excludeRoot>
                    </excludeRoots>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>net.sourceforge.pmd</groupId>
                        <artifactId>pmd-core</artifactId>
                        <version>${pmd.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>net.sourceforge.pmd</groupId>
                        <artifactId>pmd-java</artifactId>
                        <version>${pmd.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-plugin</artifactId>
                <version>${modernizer-maven-plugin.version}</version>
                <configuration>
                    <javaVersion>11</javaVersion>
                    <skip>${skipQA}</skip>
                    <failOnViolations>true</failOnViolations>
                </configuration>
                <executions>
                    <execution>
                        <id>modernizer</id>
                        <goals>
                            <goal>modernizer</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify.fmt</groupId>
                <artifactId>fmt-maven-plugin</artifactId>
                <configuration>
                    <verbose>false</verbose>
                    <filesNamePattern>.*\.java</filesNamePattern>
                    <skip>${skipQA}</skip>
                    <style>google</style>
                    <displayFiles>true</displayFiles>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>${fmt.action}</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.ekryd.sortpom</groupId>
                <artifactId>sortpom-maven-plugin</artifactId>
                <configuration>
                    <skip>${skipQA}</skip>
                    <keepBlankLines>false</keepBlankLines>
                    <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
                    <createBackupFile>false</createBackupFile>
                    <verifyFail>stop</verifyFail>
                    <verifyFailOn>strict</verifyFailOn>
                    <expandEmptyElements>false</expandEmptyElements>
                    <nrOfIndentSpace>4</nrOfIndentSpace>
                    <indentSchemaLocation>false</indentSchemaLocation>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>${pom.fmt.action}</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <!-- see https://maven.apache.org/enforcer/enforcer-rules/index.html -->
                                <requireMavenVersion>
                                    <version>3.8</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>junit:junit</exclude>
                                        <exclude>org.hamcrest:hamcrest-core</exclude>
                                        <exclude>log4j:log4j</exclude>
                                        <exclude>joda-time:joda-time</exclude>
                                    </excludes>
                                </bannedDependencies>
                                <banTransitiveDependencies>
                                    <excludes>
                                        <exclude>org.springframework.boot:spring-boot-starter-web</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-data-jpa</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-actuator</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-test</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-validation</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-security</exclude>
                                        <exclude>org.springframework.security:spring-security-test</exclude>
                                        <exclude>org.webjars:webjars-locator-core</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-aop</exclude>
                                        <exclude>org.springframework.hateoas:spring-hateoas</exclude>
                                        <exclude>io.micrometer:micrometer-registry-prometheus</exclude>
                                        <exclude>org.hibernate:hibernate-micrometer</exclude>
                                        <exclude>com.microsoft.sqlserver:mssql-jdbc:jar</exclude>
                                        <exclude>io.sentry:sentry-spring-boot-starter</exclude>
                                        <exclude>org.hibernate.orm.tooling:hibernate-enhance-maven-plugin</exclude>
                                        <exclude>p6spy:p6spy:jar</exclude>
                                        <!-- basically each and every geotools module has a load of transitive dependencies -->
                                        <exclude>org.geotools:*</exclude>
                                        <exclude>org.geotools.xsd:*</exclude>
                                        <exclude>org.junit-pioneer:junit-pioneer</exclude>
                                    </excludes>
                                </banTransitiveDependencies>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <skip>${docker.skip}</skip>
                    <verbose>true</verbose>
                    <imagePullPolicy>IfNotPresent</imagePullPolicy>
                    <images>
                        <image>
                            <!-- deploy snapshot tag -->
                            <name>${docker.deploy.repo}/b3partners/%a:snapshot</name>
                            <build>
                                <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                                <args>
                                    <TAILORMAP_API_VERSION>${project.version}</TAILORMAP_API_VERSION>
                                </args>
                                <buildx>
                                    <platforms>
                                        <platform>linux/amd64</platform>
                                        <platform>linux/arm64</platform>
                                    </platforms>
                                </buildx>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>docker-build</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                    <execution>
                        <id>docker-push</id>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <!-- NB for deploy/push login is required on ghcr.io or docker.b3p.nl repository with
                 docker - whatever value is ${docker.deploy.repo}
                 see: https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry -->
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <pushChanges>true</pushChanges>
                    <releaseProfiles>release</releaseProfiles>
                    <tagNameFormat>tailormap-api-@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <skipDeploy>true</skipDeploy>
                    <generateSitemap>true</generateSitemap>
                    <attach>false</attach>
                    <outputEncoding>${project.build.sourceEncoding}</outputEncoding>
                    <relativizeDecorationLinks>false</relativizeDecorationLinks>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.skins</groupId>
                        <artifactId>maven-fluido-skin</artifactId>
                        <version>${maven-fluido-skin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-scm-publish-plugin</artifactId>
                <configuration>
                    <content>${project.reporting.outputDirectory}</content>
                    <scmBranch>gh-pages</scmBranch>
                    <tryUpdate>true</tryUpdate>
                    <addUniqueDirectory>true</addUniqueDirectory>
                    <checkoutDirectory>/tmp/gh-pages</checkoutDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>scm-publish</id>
                        <!-- deploy site with maven-scm-publish-plugin -->
                        <goals>
                            <goal>publish-scm</goal>
                        </goals>
                        <phase>site-deploy</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>3.3.0</version>
            </plugin>
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <rulesets>
                        <ruleset>${project.basedir}/build/qa/pmd-ruleset.xml</ruleset>
                        <ruleset>${project.basedir}/build/qa/pmd-junit-ruleset.xml</ruleset>
                    </rulesets>
                    <linkXRef>true</linkXRef>
                    <includeTests>false</includeTests>
                    <excludeRoots>
                        <excludeRoot>target/generated-sources</excludeRoot>
                    </excludeRoots>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.4.2</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>ci-management</report>
                            <report>dependencies</report>
                            <report>dependency-convergence</report>
                            <report>dependency-management</report>
                            <report>distribution-management</report>
                            <report>index</report>
                            <report>issue-management</report>
                            <report>licenses</report>
                            <report>plugin-management</report>
                            <report>plugins</report>
                            <report>scm</report>
                            <report>summary</report>
                            <report>team</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <notimestamp>true</notimestamp>
                    <failOnWarnings>false</failOnWarnings>
                    <failOnError>${failOnValidation}</failOnError>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>javadoc-no-fork</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependency-updates-report</report>
                            <report>plugin-updates-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <tagListOptions>
                        <tagClasses>
                            <tagClass>
                                <displayName>Todo Work</displayName>
                                <tags>
                                    <tag>
                                        <matchString>todo</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>@todo</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                            <tagClass>
                                <displayName>Deprecated Work</displayName>
                                <tags>
                                    <tag>
                                        <matchString>@deprecated</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                        </tagClasses>
                    </tagListOptions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <title>Aggregate Test Coverage</title>
                    <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                    <dataFileIncludes>
                        <!-- this has merged u-test and i-test coverage -->
                        <dataFileInclude>${project.build.directory}/jacoco.exec</dataFileInclude>
                        <!-- NO! <dataFileInclude>${project.build.directory}/jacoco-it.exec</dataFileInclude>-->
                    </dataFileIncludes>
                    <excludes>
                        <exclude>nl/b3p/tailormap/api/model/**</exclude>
                    </excludes>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                            <!-- NO! <report>report-integration</report>-->
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${dependency-check-maven.version}</version>
                <configuration>
                    <name>OWASP Dependency Check</name>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
    <profiles>
        <profile>
            <!-- automagically activated during release with maven-release-plugin -->
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-Xlint:${compiler.lint}</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <!-- deploy latest and versioned tag -->
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <verbose>true</verbose>
                            <imagePullPolicy>Always</imagePullPolicy>
                            <images>
                                <image>
                                    <name>${docker.deploy.repo}/b3partners/%a:%l</name>
                                    <build>
                                        <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                                        <args>
                                            <TAILORMAP_API_VERSION>${project.version}</TAILORMAP_API_VERSION>
                                        </args>
                                        <buildx>
                                            <platforms>
                                                <platform>linux/amd64</platform>
                                                <platform>linux/arm64</platform>
                                            </platforms>
                                        </buildx>
                                    </build>
                                </image>
                                <image>
                                    <name>${docker.deploy.repo}/b3partners/%a:latest</name>
                                    <build>
                                        <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                                        <args>
                                            <TAILORMAP_API_VERSION>${project.version}</TAILORMAP_API_VERSION>
                                        </args>
                                        <buildx>
                                            <platforms>
                                                <platform>linux/amd64</platform>
                                                <platform>linux/arm64</platform>
                                            </platforms>
                                        </buildx>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker-push</id>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                                <phase>deploy</phase>
                                <configuration>
                                    <verbose>true</verbose>
                                    <images>
                                        <image>
                                            <name>${docker.deploy.repo}/b3partners/%a:%l</name>
                                        </image>
                                        <image>
                                            <name>${docker.deploy.repo}/b3partners/%a:latest</name>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>macos</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <docker.skip>true</docker.skip>
            </properties>
        </profile>
        <profile>
            <id>openbsd</id>
            <activation>
                <os>
                    <name>openbsd</name>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <docker.skip>true</docker.skip>
            </properties>
        </profile>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <docker.skip>true</docker.skip>
            </properties>
        </profile>
        <profile>
            <!-- use this profile to deactivate QA actions and docker builds -->
            <id>developing</id>
            <properties>
                <docker.skip>true</docker.skip>
                <skipQA>true</skipQA>
            </properties>
        </profile>
        <profile>
            <!-- this profile will be activated in case the flag -DskipQA=true is passed to maven -->
            <id>qa-skip</id>
            <activation>
                <property>
                    <name>skipQA</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <skipQA>true</skipQA>
                <failOnWarnings>false</failOnWarnings>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-Xlint:${compiler.lint}</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>postgresql</id>
            <properties>
                <spring.profiles.active>postgresql</spring.profiles.active>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <!-- explicitly run any and all postgresql tests; includes does not work -->
                            <test>*IntegrationTest</test>
                            <!-- <includes><include>**/*IntegrationTest.java</include></includes>-->
                            <!--suppress UnresolvedMavenProperty -->
                            <argLine>${failsafeArgLine} -Dspring.profiles.active=postgresql -Dspring.profiles.default=postgresql</argLine>
                            <trimStackTrace>false</trimStackTrace>
                            <useFile>false</useFile>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-spring-boot</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <skip>${skipTests}</skip>
                                    <profiles>
                                        <profile>postgresql</profile>
                                    </profiles>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <jvmArguments>${failsafeArgLine} -Dspring.profiles.active=postgresql</jvmArguments>
                                    <useTestClasspath>true</useTestClasspath>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-spring-boot</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <phase>post-integration-test</phase>
                                <configuration>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <skip>${skipTests}</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
