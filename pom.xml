<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>nl.b3p.tailormap</groupId>
    <artifactId>tailormap-api</artifactId>
    <version>0.1</version>
    <packaging>jar</packaging>
    <name>Tailormap API</name>
    <description>Tailormap API provides the OpenAPI for Tailormap</description>
    <properties>
        <java.version>11</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceVersion>${java.version}</project.build.sourceVersion>
        <project.build.targetVersion>${java.version}</project.build.targetVersion>
        <project.build.outputTimestamp>2021-08-27T10:16:01Z</project.build.outputTimestamp>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <spring.boot.version>2.5.4</spring.boot.version>
        <maven.surefire.version>3.0.0-M5</maven.surefire.version>
        <test.junit-jupiter.version>5.8.1</test.junit-jupiter.version>
        <jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
        <!-- alternatively ghcr.io  -->
        <docker-deploy-repo>docker.b3p.nl</docker-deploy-repo>
    </properties>

    <url>https://github.com/B3Partners/tailormap-api/</url>
    <inceptionYear>2021</inceptionYear>
    <licenses>
        <license>
            <url>https://raw.githubusercontent.com/B3Partners/tailormap-api/main/LICENSE</url>
            <name>MIT License</name>
            <distribution>repo</distribution>
            <comments>For the tailormap-api code.</comments>
        </license>
    </licenses>
    <organization>
        <name>B3Partners B.V.</name>
        <url>https://www.b3partners.nl/</url>
    </organization>
    <scm>
        <developerConnection>scm:git:git@github.com:B3Partners/tailormap-api.git</developerConnection>
        <connection>scm:git:git@github.com:B3Partners/tailormap-api.git</connection>
        <url>https://github.com/B3Partners/tailormap-api/</url>
        <tag>HEAD</tag>
    </scm>
    <issueManagement>
        <system>Jira</system>
        <url>https://b3partners.atlassian.net/browse/TM</url>
    </issueManagement>
    <ciManagement>
        <system>Github Actions</system>
        <url>https://github.com/B3Partners/tailormap-api/actions</url>
    </ciManagement>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <!--  <artifactId>spring-boot-starter-parent</artifactId> overerft van onderstaande -->
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <!-- no version number on jar makes building docker image easier -->
        <finalName>${project.artifactId}</finalName>
        <defaultGoal>install</defaultGoal>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/application*.yml</include>
                    <include>**/application*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>**/application*.yml</exclude>
                    <exclude>**/application*.properties</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/application*.properties</include>
                </includes>
            </testResource>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
                <excludes>
                    <exclude>**/application*.properties</exclude>
                </excludes>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.0.0-M1</version>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <!--suppress UnresolvedMavenProperty -->
                    <argLine>${surefireArgLine}</argLine>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <includes>
                        <include>**/*IntegrationTest.java</include>
                    </includes>
                    <!--suppress UnresolvedMavenProperty -->
                    <argLine>${failsafeArgLine}</argLine>
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>5.3.0</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report-integration</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>6.5.0</version>
                <configuration>
                    <enableExperimental>true</enableExperimental>
                    <retirejs>
                        <filterNonVulnerable>false</filterNonVulnerable>
                    </retirejs>
                    <suppressionFile>${project.basedir}/.mvn/owasp-suppression.xml</suppressionFile>
                    <format>ALL</format>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[3.8,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>junit:junit</exclude>
                                        <exclude>org.hamcrest:hamcrest-core</exclude>
                                    </excludes>
                                </bannedDependencies>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.37.0</version>
                <extensions>true</extensions>
                <configuration>
                    <verbose>true</verbose>
                    <imagePullPolicy>IfNotPresent</imagePullPolicy>
                    <images>
                        <image>
                            <!-- deploy snapshot tag -->
                            <name>${docker-deploy-repo}/b3partners/%a:snapshot</name>
                            <build>
                                <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                                <args>
                                    <TAILORMAP_API_VERSION>${project.version}</TAILORMAP_API_VERSION>
                                </args>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>docker-build</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>docker-push</id>
                        <!-- NB for deploy/push login is required on ghcr.io or docker.b3p.nl repository with
                            docker - whatever value is ${docker-deploy-repo}
                        see: https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry -->
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-scm-publish-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <scmBranch>gh-pages</scmBranch>
                    <tryUpdate>true</tryUpdate>
                    <addUniqueDirectory>true</addUniqueDirectory>
                    <checkoutDirectory>/tmp/gh-pages</checkoutDirectory>
                    <content>/tmp/staging</content>
                    <!-- skipCheckin>true</skipCheckin -->
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.0.0-M4</version>
                <configuration>
                    <pushChanges>true</pushChanges>
                    <releaseProfiles>release</releaseProfiles>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- deploy latest and versioned tag -->
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <verbose>true</verbose>
                            <images>
                                <image>
                                    <name>${docker-deploy-repo}/b3partners/%a:%l</name>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker-tag</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>tag</goal>
                                </goals>
                                <configuration>
                                    <tagName>latest</tagName>
                                    <repo>${docker-deploy-repo}/b3partners</repo>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-push-latest</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <verbose>true</verbose>
                                    <images>
                                        <image>
                                            <name>${docker-deploy-repo}/b3partners/%a:latest</name>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project> 
